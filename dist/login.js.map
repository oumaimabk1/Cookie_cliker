{"mappings":"MACO,MAAMA,EAAQC,MAAOC,IAC1B,IACE,MAAMC,QAAiBC,MAAM,kDAAmD,CAC9EC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CAAE,eAAgB,sBAG7B,IAAIN,EAASO,GAWX,MAAM,IAAIC,MAAM,gBAXD,CACf,MAAMC,QAAaT,EAASS,OAG5BC,OAAOC,aAAaC,QAAQ,OAAQR,KAAKC,UAAUI,EAAKI,OAExDC,YAAW,KACTJ,OAAOK,SAASC,KAAO,iBACtB,IAEL,CAKF,CAFE,MAAOC,GACPC,QAAQD,MAAMA,EAChB,GCrBWE,SAASC,eAAe,cAChCC,iBAAiB,UAAUvB,MAAOwB,IACrCA,EAAMC,iBACN,MAEMxB,EAAO,C,MAFCoB,SAASC,eAAe,SAASI,M,SAC9BL,SAASC,eAAe,YAAYI,aAE/C3B,EAAME,EAAA,G","sources":["Apicookies.js","login.js"],"sourcesContent":["//login function\r\nexport const login = async (data) => {\r\n  try {\r\n    const response = await fetch(\"https://clicker-backend.onrender.com/auth/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n   \r\n    if (response.ok) {\r\n      const json = await response.json();\r\n      \r\n      //store token in local storage \r\n      window.localStorage.setItem('user', JSON.stringify(json.user));\r\n\r\n      setTimeout(() => {\r\n        window.location.href = './index.html';\r\n      }, 1000)\r\n\r\n    } else {\r\n      throw new Error(\"Login failed\");\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n//register function\r\n\r\nexport const register = async (data) => {\r\n  try {\r\n    const response = await fetch(\"https://clicker-backend.onrender.com/auth/register\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    if (response.ok) {\r\n      //redirect to login page \r\n      alert('your are registred successfully')\r\n      setTimeout(() => {\r\n        window.location.href = './login.html';\r\n      }, 2000)\r\n\r\n    } else {\r\n      throw new Error(\"Registration failed\");\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n//recuperer les multiplicateurs \r\nexport const getPlayers = async () => {\r\n  const players = await fetch(\"https://clicker-backend.onrender.com/players\");\r\n  const dataplayers = await players.json();\r\n  if (dataplayers) {\r\n    return dataplayers\r\n  } else {\r\n    return []\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport const getOnePlayer = async (id) => {\r\n\r\n  const player = await fetch(\"https://clicker-backend.onrender.com/players/\" + id)\r\n  const currentPlayer = await player.json();\r\n \r\n  if (currentPlayer) {\r\n    return currentPlayer\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport const updatecurrentPlayer = async (score,multiplicateur) => {\r\n  let palyer = window.localStorage.getItem(\"user\");\r\n  let currentPlayer = await getOnePlayer(JSON.parse(palyer).id)\r\n  currentPlayer.score = score;\r\n  currentPlayer.multiplicateur[0].map(el => {\r\n   if(el._id === multiplicateur._id){\r\n    el.cost *= 2;\r\n    el.numberOfBuy +=1;\r\n    el.TotalCost += el.cost\r\n   }\r\n  })\r\n  await updateOnePlayer(currentPlayer)\r\n  \r\n}\r\n\r\nconst getMultiplier =async () =>{\r\n\r\n  const multi = await fetch(\"https://clicker-backend.onrender.com/multiplicateur\")\r\n  const multiplier = await multi.json();\r\n  console.log('this',multiplier)\r\n  if (multiplier) {\r\n    return multiplier\r\n  } else {\r\n    return null\r\n  }\r\n}\r\nexport const resetPlayer = async () => {\r\n  console.log('test')\r\n  let palyer = window.localStorage.getItem(\"user\");\r\n  let currentPlayer = await getOnePlayer(JSON.parse(palyer).id)\r\n  console.log('rest',currentPlayer)\r\n  currentPlayer.multiplicateur[0] = await getMultiplier()\r\n  currentPlayer.score = 0\r\n \r\n  await updateOnePlayer(currentPlayer)\r\n  \r\n}\r\n\r\nexport const updateOnePlayer = async (currentPlayer) => {\r\n\r\n  const response = await fetch(\"https://clicker-backend.onrender.com/players/\" + currentPlayer._id, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(currentPlayer),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    if(response){\r\n    }else{\r\n      console.log('no')\r\n    }\r\n}","\r\nimport {login} from './Apicookies'\r\n\r\nconst form = document.getElementById(\"login-form\");\r\nform.addEventListener(\"submit\", async (event) => {\r\n  event.preventDefault();\r\n  const email = document.getElementById(\"email\").value;\r\n  const password = document.getElementById(\"password\").value;\r\n  const data = { email, password };\r\n  await login(data);\r\n});\r\n\r\n"],"names":["$e255c7560220c3dd$export$596d806903d1f59e","async","data","response","fetch","method","body","JSON","stringify","headers","ok","Error","json","window","localStorage","setItem","user","setTimeout","location","href","error","console","document","getElementById","addEventListener","event","preventDefault","value"],"version":3,"file":"login.js.map"}